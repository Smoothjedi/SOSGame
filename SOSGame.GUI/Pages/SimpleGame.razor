@page "/simplegame"
@page "/simplegame/{size}"
@using SOSGame.GUI.Data;
@using SOSGame.GUI.Data.Factories;
@using SOSGame.GUI.Data.Objects;
@inject IJSRuntime jsRuntime
@inject NavigationManager navigationManager
@inherits BaseGame

<PageTitle>Simple Game</PageTitle>

<h1>Simple Game</h1>

<h2> Current Player: @(FirstPlayer ? "First Player" : "Second Player")</h2>
@code 
{
    [Parameter]
    public string size { get; set; }

    protected override void StartNewGame(string boardSize)
    {
        navigationManager.NavigateTo($"/simplegame/{boardSize}", true);
    }
}

<div>
    <InputSelect Value="@GameBoard.Size"
                 ValueChanged="@((int value) => StartNewGame(value.ToString()))"
                 ValueExpression="(() => GameBoard.Size)">
        <option value=3>3</option>
        <option value=4>4</option>
        <option value=5>5</option>
        <option value=6>6</option>
        <option value=7>7</option>
        <option value=8>8</option>
        <option value=9>9</option>
        <option value=10>10</option>
    </InputSelect>
</div>

<div @ref="divCanvas" @onclick="CanvasClicked">
    <BECanvas Width="@GameBoard.Dimensions" Height="@GameBoard.Dimensions" @ref="_canvasReference"></BECanvas>
</div>



<h4>First Player Letter Selection (<span class="blue">Blue</span>):</h4>
<div>
    <EditForm Model="base.GameBoard">
        <InputRadioGroup @bind-Value="GameBoard.FirstPlayerLetter">
            @foreach (var letter in LetterOptions)
            {
                if (LetterOptions.First().Equals(letter))
                {
                    <InputRadio Value="letter" /> @letter <br />
                }
                else
                {
                    <InputRadio Value="letter" /> @letter <br />
                }
            }
        </InputRadioGroup>
    </EditForm>
</div>

<h4>Second Player Letter Selection (<span class="red">Red</span>):</h4>
<div>
    <EditForm Model="base.GameBoard">
        <InputRadioGroup @bind-Value="GameBoard.SecondPlayerLetter">
            @foreach (var letter in LetterOptions)
            {
                <InputRadio Value="letter" /> @letter <br />
            }
        </InputRadioGroup>
    </EditForm>
</div>

<Button Color="ButtonColor.Secondary" @onclick="(args) => StartNewGame(size)"> New Game </Button>

@if (GameOver)
{
    <h3>Game is Over!</h3>
    @if (firstPlayerScores > secondPlayerScores)
    {
        <h4>First Player is the winner!</h4>
    }
    @if (firstPlayerScores < secondPlayerScores)
    {
        <h4>Second Player is the winner!</h4>
    }
    @if (Equals(firstPlayerScores, secondPlayerScores))
    {
        <h4>The game is a draw!</h4>
    }
}